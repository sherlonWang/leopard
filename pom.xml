<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.imxiaolong</groupId>
    <artifactId>leopard</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>leopard</name>

    <!-- 定义springboot版本 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.1</version>
    </parent>

    <!-- 定义各框架版本 -->
    <properties>
        <java.version>1.8</java.version>
        <version>1.0</version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud.version>2021.0.0</spring-cloud.version>
    </properties>

    <!-- 模块管理 -->
    <modules>
        <module>leopard-backend</module>
        <module>leopard-common</module>
    </modules>

    <!-- 对依赖的管理，而不注入依赖。对多个模块共同引入一个依赖统一进行版本管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- springCloud 框架版本统一 -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.cloud</groupId>-->
<!--                <artifactId>spring-cloud-dependencies</artifactId>-->
<!--                <version>${spring-cloud.version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->
            <!--
                fastjson 版本统一管理。
                子模块想用 fastjson 只需要引用 groupId、artifactId 即可，
                version 如果不写会默认继承父级 version，写了则会覆盖父级 version。
            -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.83</version>
            </dependency>

            <!-- 定义通用模块，其他模块引用通用模块，保持版本统一 -->
            <dependency>
                <groupId>com.imxiaolong.leopard</groupId>
                <artifactId>leopard-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- rabbitmq -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-amqp</artifactId>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; elasticsearch &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; mongodb &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-data-mongodb</artifactId>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; redis &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-data-redis</artifactId>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; kafka &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.kafka</groupId>-->
<!--                <artifactId>spring-kafka</artifactId>-->
<!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <!-- 父级模块dependencies下的模块会被所有子模块继承 -->
    <dependencies>
        <!-- spring-boot-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- spring-boot-starter-test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- configuration processor -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- log4j2 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- 删除springboot默认的 spring-boot-starter-logging  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
